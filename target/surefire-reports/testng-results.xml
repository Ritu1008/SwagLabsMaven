<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-23T07:26:34Z" name="Suite" finished-at="2023-04-23T07:26:39Z" duration-ms="4418">
    <groups>
    </groups>
    <test started-at="2023-04-23T07:26:34Z" name="Test" finished-at="2023-04-23T07:26:39Z" duration-ms="4418">
      <class name="TestCases.LoginTest">
        <test-method is-config="true" signature="ReportSetup()[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:34Z" name="ReportSetup" finished-at="2023-04-23T07:26:35Z" duration-ms="381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportSetup -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:35Z" name="SetUp" finished-at="2023-04-23T07:26:37Z" duration-ms="2018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Negative() throws com.codoid.products.exception.FilloException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="Negative()[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:37Z" name="Negative" finished-at="2023-04-23T07:26:37Z" duration-ms="93" status="FAIL">
          <exception class="com.codoid.products.exception.FilloException">
            <message>
              <![CDATA[data table is not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.codoid.products.exception.FilloException: data table is not found
at com.codoid.products.fillo.SelectExcelUtil.runSelectQuery(SelectExcelUtil.java:57)
at com.codoid.products.fillo.Select.getRecordset(Select.java:61)
at com.codoid.products.fillo.Connection.executeQuery(Connection.java:64)
at TestCases.LoginTest.Negative(LoginTest.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.codoid.products.exception.FilloException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Negative -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:37Z" name="TearDown" finished-at="2023-04-23T07:26:37Z" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:37Z" name="SetUp" finished-at="2023-04-23T07:26:39Z" duration-ms="1471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestCases.LoginTest.Positive() throws com.codoid.products.exception.FilloException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method signature="Positive()[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:39Z" name="Positive" finished-at="2023-04-23T07:26:39Z" duration-ms="1" status="FAIL">
          <exception class="com.codoid.products.exception.FilloException">
            <message>
              <![CDATA[data table is not found]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.codoid.products.exception.FilloException: data table is not found
at com.codoid.products.fillo.SelectExcelUtil.runSelectQuery(SelectExcelUtil.java:57)
at com.codoid.products.fillo.Select.getRecordset(Select.java:61)
at com.codoid.products.fillo.Connection.executeQuery(Connection.java:64)
at TestCases.LoginTest.Positive(LoginTest.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- com.codoid.products.exception.FilloException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Positive -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:39Z" name="TearDown" finished-at="2023-04-23T07:26:39Z" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="ReportClean()[pri:0, instance:TestCases.LoginTest@51549490]" started-at="2023-04-23T07:26:39Z" name="ReportClean" finished-at="2023-04-23T07:26:39Z" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportClean -->
      </class> <!-- TestCases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
